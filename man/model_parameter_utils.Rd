% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/model_checks.R
\name{table_parameters}
\alias{table_parameters}
\alias{print_parameter_map}
\alias{model_parameter_utils}
\title{Tabulate Model Parameter}
\usage{
table_parameters(model_r, parameters_r)

print_parameter_map(model_r)
}
\arguments{
\item{model_r}{An S4 model object created by \code{BuildModel}.}

\item{parameters_r}{Numeric vector of parameter values (for `table_parameters` only)}
}
\value{
\describe{
  \item{table_parameters}{Returns a List in matrix form showing how parameters
map to model parameters}
  \item{print_parameter_map}{Prints the parameter mapping structure and
returns invisibly as integer status (0 for success)}
}
}
\description{
Functions for inspecting and displaying parameter structures in models
built with `ggdmcModel`.
}
\details{
These functions help analyse whether the parameter and the factor are
constructed as \code{BuildModel} specified:

\itemize{
  \item `table_parameters()` creates a tabular representation showing how
        parameters map to stimuli, responses, and other model components
  \item `print_parameter_map()` displays the model's parameter mapping.
}
}
\examples{
\dontrun{
# Build a model first
model <- ggdmcModel::BuildModel(
    p_map = list(a = "1", v = "M", z = "1", t0 = "1"),
    match_map = list(M = list(s1 = "r1", s2 = "r2")),
    factors = list(S = c("s1", "s2")),
    accumulators = c("r1", "r2"),
    type = "fastdm"
)

# Tabulate parameter mapping
pop_mean <- c(a = 1, sz = 0.25, t0 = 0.15, v = 2.5, z = 0.38)
param_table <- table_parameters(model, pop_mean)
# $s1.r1
#             r1   r2
# a         1.00 1.00
# d         0.00 0.00
# precision 3.00 3.00
# s         1.00 1.00
# st0       0.00 0.00
# sv        0.00 0.00
# sz        0.25 0.25
# t0        0.15 0.15
# v         2.50 2.50
# z         0.38 0.38
# $s1.r2
# ...

# Print parameter map structure
print_parameter_map(model)
}

}
