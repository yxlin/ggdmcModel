% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{BuildDMI}
\alias{BuildDMI}
\title{Build Data Model Instance}
\usage{
BuildDMI(data, model)
}
\arguments{
\item{data}{A dataset to be converted to a DMI object. It must be a data
frame.}

\item{model}{A model specification object of class `model` containing type,
parameters, and other model-specific information.}
}
\value{
A `dmi` object or list of `dmi` objects (multiple subjects),
with structure:
\itemize{
  \item For LBA models: Returns a named list of `dmi` objects (one per subject)
  \item For hyperparameter models: Returns a single `dmi` object
}
Each `dmi` object contains:
\itemize{
  \item `model` - The model specification
  \item `data` - The processed data (a list)
  \item `node_1_index` - Index mapping for first nodes (LBA only)
  \item `is_positive_drift` - Logical vector for drift directions. For LBA,
each element corresponds to an accumulator. In the DDM, each element
represents a condition. Additionally, in the DDM, the positive direction
corresponds to a correct response (i.e., upper bound), and vice versa.
}
}
\description{
Constructs a Data Model Instance (DMI) object from data and model
specifications, handling different model types including
Linear Ballistic Accumulator, Diffusion Decision and
hyperparameters (i.e., common statiatical models).
}
\section{Model Types Supported}{

\describe{
  \item{`"lba"`}{Linear Ballistic Accumulator model}
  \item{`"hyper"`}{Hyperparameter model (single subject)}
  \item{`"fastdm"`}{Diffusion Decision model}
}
}

\section{Errors}{

Throws errors for:
\itemize{
  \item S4 objects passed as `data` (suggesting reversed arguments)
  \item Unsupported model types
  \item Requests for norm model type (directs user to use 'lba')
}
}

\examples{
\dontrun{

# Hyperparameter model example
hyper_model <- BuildModel(
    p_map = list(A = "1", B = "1", mean_v = "M", sd_v = "1", st0 = "1", t0 = "1"),
    match_map = list(M = list(s1 = "r1", s2 = "r2")),
    factors = list(S = c("s1", "s2")),
    constants = c(sd_v = 1, st0 = 0),
    accumulators = c("r1", "r2"),
    type = "hyper",
    verbose = FALSE
)

# LBA model example
model <- ggdmcModel::BuildModel(
    p_map = list(A = "1", B = "1", t0 = "1", mean_v = "M", sd_v = "1", st0 = "1"),
    match_map = list(M = list(s1 = "r1", s2 = "r2")),
    factors = list(S = c("s1", "s2")),
    constants = c(st0 = 0, sd_v = 1),
    accumulators = c("r1", "r2"),
    type = "lba"
)

sub_model <- lbaModel::setLBA(model)
pop_model <- lbaModel::setLBA(model, population_distribution = pop_dist)
p_vector <- c(A = .75, B = 1.25, mean_v.false = 1.5, mean_v.true = 2.5, t0 = .15)
dat <- lbaModel::simulate(sub_model, nsim = 256, parameter_vector = p_vector, n_subject = 1)
hdat <- lbaModel::simulate(pop_model, nsim = 256, n_subject = 32)

sub_dmis <- ggdmcModel::BuildDMI(dat, model)
pop_dmis <- ggdmcModel::BuildDMI(hdat, model)
hyper_dmi <- ggdmcModel::BuildDMI(hdat, hyper_model)
}

}
